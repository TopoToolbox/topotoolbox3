name: Latest Release
on:
  push:
    branches: ["main"]

jobs:
  release:
    if: github.repository == 'TopoToolbox/topotoolbox3'
    name: Update release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      new-tag: ${{ steps.tag.outputs.TAG }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true # Fetch all the tags so that we compute release number correctly
      - name: Download compiled toolboxes
        uses: actions/download-artifact@v4
        with:
          path: release
          pattern: "toolbox-*-*"
          merge-multiple: true
      - name: Generate tag
        id: tag
        run: |
          PREFIX="release-$(date +'%Y%m%d')-"
          MAX=$(git tag -l "${PREFIX}*" | sed -E "s/^${PREFIX}([0-9]+)/\1/" | sort -n | tail -n1)
          NEXT=$((${MAX:-0} + 1))
          NEW_TAG="${PREFIX}${NEXT}"
          echo "TAG=$NEW_TAG" >> $GITHUB_OUTPUT
          echo "TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "This release will be tagged: $NEW_TAG"
      - name: Create release
        run: |
          gh release create $TAG --target main --generate-notes --latest -F .github/latest_release.md
  docs:
    if: github.repository == 'TopoToolbox/topotoolbox3'
    name: Build docs
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          release: r2025a
          cache: false
          products: >-
            Mapping_Toolbox
            Image_Processing_Toolbox
            Optimization_Toolbox
            MATLAB_Coder
      - name: Compile libtopotoolbox and MEX files
        uses: matlab-actions/run-build@v2
        with:
          tasks: compile
      - name: Build docs
        uses: matlab-actions/run-build@v2
        with:
          tasks: doc
      - name: Upload docs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: toolbox-docs
          path: toolbox/docs/html
  package:
    if: github.repository == 'TopoToolbox/topotoolbox3'
    name: Package toolbox
    needs: [docs, release]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-13]
        mex: [ true ]
        include:
          - os: windows-latest
            mex: false
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2        
        with:
          cache: ${{ matrix.os != 'windows-latest' }}
          products: >
            Mapping_Toolbox
            Image_Processing_Toolbox
            Optimization_Toolbox
            MATLAB_Coder
      - name: Download created docs
        uses: actions/download-artifact@v4
        with:
          name: toolbox-docs
          path: toolbox/docs/html/
      - name: Build MEX files
        if: ${{ matrix.mex }}
        uses: matlab-actions/run-build@v2
        with:
          tasks: compile
      - name: Build package
        uses: matlab-actions/run-build@v2
        with:
          tasks: package
      - name: Move un-compiled package to one with a generic name
        if: ${{ ! matrix.mex }}
        shell: bash
        run: mv release/TopoToolbox_win64.mltbx release/TopoToolbox_nolibtt.mltbx
      - name: Upload toolbox as artifact
        uses: actions/upload-artifact@v4
        with:
          name: toolbox-${{ matrix.os }}-${{ matrix.mex }}
          path: release/TopoToolbox_*.mltbx
      - name: Upload toolbox assets
        shell: bash
        run: gh release upload --repo $GITHUB_REPOSITORY $TAG release/*
        env:
          TAG: ${{needs.release.outputs.new-tag}}
